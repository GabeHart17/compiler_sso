PROGRAM ::= FUNCTION PROGRAM | VAR_DECL PROGRAM | epsilon
FUNCTION ::= VAR_DECL t_paren_left F_DECL_ARGS t_paren_right BLOCK | epsilon
VAR_DECL ::= TYPE_NAME t_ident
F_DECL_ARGS ::= ARG_DECLS | epsilon
ARG_DECLS ::= VAR_DECL t_coma ARG_DECLS | VAR_DECL
BLOCK ::= t_curly_left STATEMENTS t_curly_right | STATEMENT t_semicolon
STATEMENTS ::= STATEMENT t_semicolon STATEMENTS | epsilon
STATEMENT ::= VAR_DECL | EXPR | VAR_DECL t_assign EXPR | CONDITION | LOOP | FUNCTION_CALL

EXPR ::= L_VALUE t_assign EXPR | t_paren_right EXPR t_paren_left | E9
E0 ::= L_VALUE t_increment | L_VALUE t_decrement | R_VALUE
E1 ::= t_increment L_VALUE | t_decrement L_VALUE | t_minus EXPR | t_not EXPR | t_bitwise_not EXPR | t_cast EXPR | t_dereference EXPR | t_reference EXPR | E0
E2 ::= E1 t_multiply EXPR | E1 t_divide EXPR | E1 t_modulo EXPR | E1
E3 ::= E2 t_plus EXPR | E2 t_minus EXPR | E2
E4 ::= E3 t_less_than EXPR | E3 t_greater_than EXPR | E3 t_lt_or_eq EXPR | E3 t_gt_or_eq EXPR | E3
E5 ::= E4 t_equal EXPR | E4 t_not_equal EXPR | E4
E6 ::= E5 t_bitwise_and EXPR | E5
E7 ::= E6 t_bitwise_or EXPR | E6
E8 ::= E7 t_and EXPR | E7
E9 ::= E8 t_or EXPR | E8

CONDITION ::= t_if t_paren_left EXPR t_paren_right BLOCK ELSE_BLOCKS
ELSE_BLOCKS ::= t_else BLOCK | t_else CONDITION | epsilon
FUNCTION_CALL ::= t_ident t_paren_left CALL_ARGS t_paren_right
CALL_ARGS ::= R_VALUE t_coma CALL_ARGS | R_VALUE | epsilon

LOOP ::= FOR_LOOP | WHILE_LOOP
FOR_LOOP ::= t_for t_paren_left FOR_STATEMENT t_semicolon FOR_CONDITION t_semicolon FOR_STATEMENT t_paren_right BLOCK
FOR_STATEMENT ::= STATEMENT | epsilon
FOR_CONDITION ::= EXPR | epsilon
WHILE_LOOP ::= t_while t_paren_left EXPR t_paren_right BLOCK

TYPE_NAME ::= t_bool | t_char | t_float | t_int | t_pointer
L_VALUE ::= t_ident | t_dereference t_ident | t_ident t_bracket_left EXPR t_bracket_right
R_VALUE ::= L_VALUE | LITERAL
LITERAL ::= t_literal_bool | t_literal_char | t_literal_float | t_literal_int | t_literal_string
